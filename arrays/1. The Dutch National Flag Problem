// TC O(n^2) SC O(1)

vector<int> dnf(int idx, vector<int> A) {

	//Bring smaller values than pivot to the front
	for(int i = 0; i < A.size(); i++) {
		for(int j = i + 1; j < A.size(); j++) {
			if(A[j] < A[idx]) {
				swap(A[i], A[j]);
				break;
			}
		} 
	}

	//Bring larger values than pivot to the back
	for(int i = A.size() - 1; i >= 0 && A[i] > A[idx]; i--) {
		for(int j = i - 1; j >= 0; j--) {
			if(A[j] > A[idx]) {
				swap(A[i], A[j]);
				break;
			}
		} 
	}

	return A;
}
